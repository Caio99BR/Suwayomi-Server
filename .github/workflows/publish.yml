name: CI Publish

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_wrapper:
    name: Validate Gradle Wrapper
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

  build:
    name: Build Jar and WebUI
    needs: check_wrapper
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.ref }}
        uses: actions/checkout@v5
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: 21
          distribution: temurin

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Copy CI gradle.properties
        run: |
          mkdir -p ~/.gradle
          cp .github/runner-files/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Build WebUI and Jar
        env:
          ProductBuildType: "Stable"
        run: ./gradlew :server:downloadWebUI :server:shadowJar --stacktrace

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: jar
          path: server/build/*.jar
          if-no-files-found: error

      - name: Upload icons
        uses: actions/upload-artifact@v4
        with:
          name: icon
          path: server/src/main/resources/icon
          if-no-files-found: error

      - name: Tar scripts directory to preserve permissions
        run: tar -cvzf scripts.tar.gz scripts/

      - name: Upload scripts archive
        uses: actions/upload-artifact@v4
        with:
          name: scripts
          path: scripts.tar.gz
          if-no-files-found: error

  jlink:
    name: Create custom JRE
    runs-on: ${{ matrix.os }}
    needs: check_wrapper
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: linux-x64
          - os: windows-latest
            name: windows-x64
          - os: macos-14
            name: macOS-arm64
          - os: macos-13
            name: macOS-x64
    steps:
      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: 21
          distribution: temurin

      - name: Package custom JDK with jlink
        run: |
          jlink \
            --add-modules java.base,java.compiler,java.datatransfer,java.desktop,java.instrument,java.logging,java.management,java.naming,java.prefs,java.scripting,java.se,java.security.jgss,java.security.sasl,java.sql,java.transaction.xa,java.xml,jdk.attach,jdk.crypto.ec,jdk.jdi,jdk.management,jdk.net,jdk.random,jdk.unsupported,jdk.unsupported.desktop,jdk.zipfs \
            --output suwa \
            --strip-debug \
            --no-man-pages \
            --no-header-files \
            --compress=2

      - name: Upload JDK package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-jre
          path: suwa

  bundle:
    name: Make release packages
    needs: [build, jlink]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: debian-all
            jre: linux-x64
          - name: appimage
            jre: linux-x64
          - name: linux-assets
            jre: linux-assets
          - name: linux-x64
            jre: linux-x64
          - name: macOS-x64
            jre: macOS-x64
          - name: macOS-arm64
            jre: macOS-arm64
          - name: windows-x64
            jre: windows-x64
    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v5
        with:
          name: jar
          path: server/build

      - name: Download JDK package
        if: ${{ matrix.name != 'linux-assets' && matrix.name != 'debian-all' }}
        uses: actions/download-artifact@v5
        with:
          name: ${{ matrix.jre }}-jre
          path: jre

      - name: Download icons
        uses: actions/download-artifact@v5
        with:
          name: icon
          path: server/src/main/resources/icon

      - name: Download scripts archive
        uses: actions/download-artifact@v5
        with:
          name: scripts

      - name: Extract scripts
        run: tar -xvpf scripts.tar.gz

      - name: Run bundler
        run: scripts/bundler.sh -o upload/ ${{ matrix.name }}

      - name: Upload release package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: upload/*
          if-no-files-found: error

  release:
    name: Create GitHub release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: bundle
    runs-on: ubuntu-latest
    steps:
      - name: Download all release artifacts
        uses: actions/download-artifact@v5
        with:
          path: release

      - name: Generate checksums
        run: cd release && sha256sum * > Checksums.sha256

      - name: Draft GitHub release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: release/*
        env:
          GITHUB_TOKEN: ${{ github.token }}
